#!/bin/bash

INITRD_DIR=/var/tmp/initrd
INITRD_ROOT_DIR=$INITRD_DIR/root
INITRD_MOUNT_DIR=$INITRD_DIR/mnt
INITRD_IMAGE=$INITRD_DIR/initrd.loimg
INITRD_CONF=mkinitrd.conf
INITRD_IMAGE_GZ=initrd.img
LOOP_DEV=/dev/loop/1
LINUXRC=$INITRD_ROOT_DIR/linuxrc

print_usage() {
  echo "$0: -k kernel_ver -o [conf|image]"
}

conf() {
  exec 1>mkinitrd.conf
  for module in scsi_mod.o sd_mod.o sr_mod.o sg.o; do
    if [ -f pkg/lib/modules/$KERNEL_VER/kernel/drivers/scsi/$module ]; then
      echo pkg/lib/modules/$KERNEL_VER/kernel/drivers/scsi/$module
    fi
  done

  find pkg/lib/modules/$KERNEL_VER/kernel/drivers/scsi -name '*.o' | grep -Ev 'pcmcia|scsi_mod|s[dr]_mod|sg'
  find pkg/lib/modules/$KERNEL_VER/kernel/drivers/block -name '*.o'
}

image() {
  rm -rf $INITRD_DIR &>/dev/null
  mkdir -p $INITRD_MOUNT_DIR
  mkdir -p $INITRD_ROOT_DIR/{bin,dev/rd,dev/vc,etc,lib/modules,loopfs,proc,sbin,tmp}
  
  for module in `grep -Ei '^[a-z0-9./]' $INITRD_CONF`; do
     cp -dp $module $INITRD_ROOT_DIR/lib/modules
  done
  
  cp nash $INITRD_ROOT_DIR/bin
  cp /sbin/insmod.static $INITRD_ROOT_DIR/bin/insmod
  mknod $INITRD_ROOT_DIR/dev/console c 5 1
  mknod $INITRD_ROOT_DIR/dev/null c 1 3
  mknod $INITRD_ROOT_DIR/dev/rd/0 b 1 0
  mknod $INITRD_ROOT_DIR/dev/rd/1 b 1 1
  mknod $INITRD_ROOT_DIR/dev/vc/0 c 4 0
  mknod $INITRD_ROOT_DIR/dev/vc/1 c 4 1
  mknod $INITRD_ROOT_DIR/dev/vc/2 c 4 2
  mknod $INITRD_ROOT_DIR/dev/vc/3 c 4 3
  mknod $INITRD_ROOT_DIR/dev/vc/4 c 4 4
  
  
  echo '#!/bin/nash' > $LINUXRC
  echo '' >> $LINUXRC
  echo 'PATH=/bin' >> $LINUXRC
  echo '' >> $LINUXRC
  
  for module in `grep -Ei '^[a-z0-9./]' $INITRD_CONF`; do
     echo "insmod -k /lib/modules/`basename $module` >/dev/null 2>&1" >> $LINUXRC
  done
  
  chmod 700 $LINUXRC
  
  dd if=/dev/zero of=$INITRD_IMAGE count=3000 bs=1024 &>/dev/null
  for LOOP_DEV in `find /dev/loop -type b`; do
     if losetup $LOOP_DEV $INITRD_IMAGE &>/dev/null; then
        break
     fi
  done
  mke2fs $LOOP_DEV &>/dev/null
  mount $LOOP_DEV $INITRD_MOUNT_DIR
  cp -a $INITRD_ROOT_DIR/* $INITRD_MOUNT_DIR/
  umount $INITRD_MOUNT_DIR
  losetup -d $LOOP_DEV
  gzip -c $INITRD_IMAGE > $INITRD_IMAGE_GZ
  cp $INITRD_IMAGE_GZ pkg/boot 
  rm $INITRD_IMAGE_GZ
}

while getopts ":k:o:" opt; do
  case $opt in
    k) KERNEL_VER=$OPTARG
       ;;
    o) OP=$OPTARG
       ;;
    *) print_usage
       exit 1
       ;;
  esac
done

if [ -z $KERNEL_VER ] || [ -z $OP ]; then
  print_usage
  exit 1
else
  eval $OP   
  exit 0
fi


